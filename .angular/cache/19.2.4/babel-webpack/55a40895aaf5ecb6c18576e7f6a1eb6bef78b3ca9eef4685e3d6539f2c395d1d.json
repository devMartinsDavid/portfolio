{"ast":null,"code":"// This file is required by karma.conf.js and loads recursively all the .spec and framework files\nimport 'zone.js/testing';\nimport { getTestBed } from '@angular/core/testing';\nimport { BrowserDynamicTestingModule, platformBrowserDynamicTesting } from '@angular/platform-browser-dynamic/testing';\n// First, initialize the Angular testing environment.\ngetTestBed().initTestEnvironment(BrowserDynamicTestingModule, platformBrowserDynamicTesting(), {\n  teardown: {\n    destroyAfterEach: true\n  }\n});\n// Then we find all the tests.\nconst context = require.context('./', true, /\\.spec\\.ts$/);\n// And load the modules.\ncontext.keys().map(context);","map":{"version":3,"names":["getTestBed","BrowserDynamicTestingModule","platformBrowserDynamicTesting","initTestEnvironment","teardown","destroyAfterEach","context","require","keys","map"],"sources":["C:\\projetos\\meus projetos\\portfolio\\src\\test.ts"],"sourcesContent":["// This file is required by karma.conf.js and loads recursively all the .spec and framework files\r\n\r\nimport 'zone.js/testing';\r\nimport { getTestBed } from '@angular/core/testing';\r\nimport {\r\n  BrowserDynamicTestingModule,\r\n  platformBrowserDynamicTesting\r\n} from '@angular/platform-browser-dynamic/testing';\r\n\r\ndeclare const require: {\r\n  context(path: string, deep?: boolean, filter?: RegExp): {\r\n    keys(): string[];\r\n    <T>(id: string): T;\r\n  };\r\n};\r\n\r\n// First, initialize the Angular testing environment.\r\ngetTestBed().initTestEnvironment(\r\n  BrowserDynamicTestingModule,\r\n  platformBrowserDynamicTesting(),\r\n  { teardown: { destroyAfterEach: true }},\r\n);\r\n\r\n// Then we find all the tests.\r\nconst context = require.context('./', true, /\\.spec\\.ts$/);\r\n// And load the modules.\r\ncontext.keys().map(context);\r\n"],"mappings":"AAAA;AAEA,OAAO,iBAAiB;AACxB,SAASA,UAAU,QAAQ,uBAAuB;AAClD,SACEC,2BAA2B,EAC3BC,6BAA6B,QACxB,2CAA2C;AASlD;AACAF,UAAU,EAAE,CAACG,mBAAmB,CAC9BF,2BAA2B,EAC3BC,6BAA6B,EAAE,EAC/B;EAAEE,QAAQ,EAAE;IAAEC,gBAAgB,EAAE;EAAI;AAAE,CAAC,CACxC;AAED;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACD,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC;AAC1D;AACAA,OAAO,CAACE,IAAI,EAAE,CAACC,GAAG,CAACH,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}