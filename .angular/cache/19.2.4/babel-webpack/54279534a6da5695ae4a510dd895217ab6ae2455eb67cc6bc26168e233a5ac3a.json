{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from \"@angular/core\";\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from \"sweetalert2\";\nlet MessageService = class MessageService {\n  constructor(toastrService) {\n    this.toastrService = toastrService;\n    this.swal = Swal;\n  }\n  toastError(message = 'Falha de servidor', title = 'Ops!') {\n    this.toastrService.error(message, title);\n  }\n  toastSuccess(message = 'Cadastrado com sucesso!', title = 'Prontinho!') {\n    this.toastrService.success(message, title);\n  }\n  toastWarning(message = 'Algo está faltando!', title = 'Opa!') {\n    this.toastrService.warning(message, title);\n  }\n  alertNet() {\n    this.swal.fire({\n      icon: 'error',\n      title: 'Falha na conexão',\n      html: 'Parece que você está sem internet, verifique a conexão!',\n      allowOutsideClick: false\n    }).then(result => {\n      if (result.isConfirmed) {\n        location.reload();\n      }\n    });\n  }\n  static {\n    this.ctorParameters = () => [{\n      type: ToastrService\n    }];\n  }\n};\nMessageService = __decorate([Injectable({\n  providedIn: 'root'\n})], MessageService);\nexport { MessageService };","map":{"version":3,"names":["Injectable","ToastrService","Swal","MessageService","constructor","toastrService","swal","toastError","message","title","error","toastSuccess","success","toastWarning","warning","alertNet","fire","icon","html","allowOutsideClick","then","result","isConfirmed","location","reload","__decorate","providedIn"],"sources":["C:\\projetos\\meus projetos\\portfolio\\src\\app\\services\\message.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n  private readonly swal = Swal;\r\n\r\n  constructor(private toastrService: ToastrService) { }\r\n\r\n  public toastError(message = 'Falha de servidor', title = 'Ops!') {\r\n    this.toastrService.error(message, title);\r\n  }\r\n\r\n  public toastSuccess(message = 'Cadastrado com sucesso!', title = 'Prontinho!') {\r\n    this.toastrService.success(message, title);\r\n  }\r\n\r\n  public toastWarning(message = 'Algo está faltando!', title = 'Opa!') {\r\n    this.toastrService.warning(message, title);\r\n  }\r\n\r\n  public alertNet() {\r\n    this.swal.fire({\r\n      icon: 'error',\r\n      title: 'Falha na conexão',\r\n      html: 'Parece que você está sem internet, verifique a conexão!',\r\n      allowOutsideClick: false,\r\n    }).then(result => {\r\n      if (result.isConfirmed) {\r\n        location.reload();\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,aAAa,QAAQ,YAAY;AAC1C,OAAOC,IAAI,MAAM,aAAa;AAKvB,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAFhB,KAAAC,IAAI,GAAGJ,IAAI;EAEwB;EAE7CK,UAAUA,CAACC,OAAO,GAAG,mBAAmB,EAAEC,KAAK,GAAG,MAAM;IAC7D,IAAI,CAACJ,aAAa,CAACK,KAAK,CAACF,OAAO,EAAEC,KAAK,CAAC;EAC1C;EAEOE,YAAYA,CAACH,OAAO,GAAG,yBAAyB,EAAEC,KAAK,GAAG,YAAY;IAC3E,IAAI,CAACJ,aAAa,CAACO,OAAO,CAACJ,OAAO,EAAEC,KAAK,CAAC;EAC5C;EAEOI,YAAYA,CAACL,OAAO,GAAG,qBAAqB,EAAEC,KAAK,GAAG,MAAM;IACjE,IAAI,CAACJ,aAAa,CAACS,OAAO,CAACN,OAAO,EAAEC,KAAK,CAAC;EAC5C;EAEOM,QAAQA,CAAA;IACb,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC;MACbC,IAAI,EAAE,OAAO;MACbR,KAAK,EAAE,kBAAkB;MACzBS,IAAI,EAAE,yDAAyD;MAC/DC,iBAAiB,EAAE;KACpB,CAAC,CAACC,IAAI,CAACC,MAAM,IAAG;MACf,IAAIA,MAAM,CAACC,WAAW,EAAE;QACtBC,QAAQ,CAACC,MAAM,EAAE;MACnB;IACF,CAAC,CAAC;EACJ;;;;;;;AA5BWrB,cAAc,GAAAsB,UAAA,EAH1BzB,UAAU,CAAC;EACV0B,UAAU,EAAE;CACb,CAAC,C,EACWvB,cAAc,CA6B1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}